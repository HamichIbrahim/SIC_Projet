{"ast":null,"code":"var _jsxFileName = \"D:\\\\sic\\\\sic_front\\\\src\\\\component\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport './chatroom.css';\nimport './ViewerPopup.css'; // Import the CSS for the viewer popup\nimport ViewerPopup from './popup'; // Import the viewer popup component\n\nimport profileImage from './profile.png';\nimport eyeIcon from './view.png'; // Add a suitable eye icon image for unseen messages\nimport seenIcon from './double-check.png'; // Add a suitable seen icon image for seen messages\nimport multipleSeenIcon from './check.png'; // Add a suitable icon for multiple viewers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  currentUser,\n  selectedRoom,\n  onLogout\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [unseenMessageIds, setUnseenMessageIds] = useState([]);\n  const [viewers, setViewers] = useState({}); // Store viewers for each message\n  const [showViewerPopup, setShowViewerPopup] = useState(null); // State to manage visible viewer list\n  const chatAreaRef = useRef(null);\n  const scrollToUnseenMessage = unseenMessages => {\n    if (unseenMessages.length > 0) {\n      const firstUnseenMessageId = unseenMessages[0].id;\n      const unseenMessageElement = document.getElementById(`message-${firstUnseenMessageId}`);\n      if (unseenMessageElement) {\n        unseenMessageElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        });\n      }\n    }\n  };\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}`);\n      setMessages(response.data);\n      const unseenResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/unseenMessages`);\n      const unseenMessages = unseenResponse.data;\n      if (unseenMessages.length > 0) {\n        setUnseenMessageIds(unseenMessages.map(msg => msg.id));\n        await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, unseenMessages.map(msg => msg.id), {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        scrollToUnseenMessage(unseenMessages);\n      }\n\n      // Fetch viewers for each message\n      response.data.forEach(async msg => {\n        const viewersResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${msg.id}/viewers`);\n        setViewers(prevViewers => ({\n          ...prevViewers,\n          [msg.id]: viewersResponse.data\n        }));\n      });\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const markMessageAsSeen = async messageId => {\n    try {\n      await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, [messageId], {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Error marking message as seen:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedRoom !== null && selectedRoom !== void 0 && selectedRoom.id) {\n      fetchMessages();\n      const pusher = new Pusher('26b8c5180fb34a80d337', {\n        cluster: 'eu'\n      });\n      const channel = pusher.subscribe(`room-${selectedRoom.id}`);\n      channel.bind('new-message', newMessage => {\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n        markMessageAsSeen(newMessage.id);\n      });\n      return () => {\n        pusher.unsubscribe(`room-${selectedRoom.id}`);\n      };\n    }\n  }, [selectedRoom === null || selectedRoom === void 0 ? void 0 : selectedRoom.id]);\n  const handleLogout = async () => {\n    try {\n      await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`, {\n        isActive: false\n      });\n      onLogout();\n    } catch (error) {\n      console.error('Error updating join status:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const newMessage = {\n          message: message,\n          user: {\n            id: currentUser.id,\n            username: currentUser.username,\n            avatar: currentUser.avatar\n          },\n          // Include avatar\n          room: {\n            id: selectedRoom.id,\n            label: selectedRoom.label\n          }\n        };\n        const response = await axios.post('http://localhost:8080/message', newMessage);\n        const savedMessage = response.data;\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const toggleViewerPopup = (messageId, event) => {\n    const rect = event.target.getBoundingClientRect(); // Get position of the clicked icon\n    const position = {\n      top: rect.bottom + window.scrollY,\n      // Bottom of the icon\n      left: rect.left + window.scrollX // Left of the icon\n    };\n    if ((showViewerPopup === null || showViewerPopup === void 0 ? void 0 : showViewerPopup.id) === messageId) {\n      setShowViewerPopup(null); // Hide viewer list\n    } else {\n      setShowViewerPopup({\n        id: messageId,\n        position\n      }); // Show viewer list with position\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-user\",\n        children: [\"Logged in as: \", currentUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      ref: chatAreaRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chatting in: \", selectedRoom.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map(msg => {\n          var _viewers$msg$id;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `message-${msg.id}`,\n            className: `message ${msg.user.id === currentUser.id ? 'sent' : 'received'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: profileImage,\n              alt: \"Avatar\",\n              className: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.user ? msg.user.username : 'Unknown User', \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), \" \", msg.message || '', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: new Date(msg.createdAt).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), ((_viewers$msg$id = viewers[msg.id]) === null || _viewers$msg$id === void 0 ? void 0 : _viewers$msg$id.length) > 0 &&\n              /*#__PURE__*/\n              // Display seen icon if there are viewers\n              _jsxDEV(\"span\", {\n                className: \"seen-icon\",\n                onClick: e => toggleViewerPopup(msg.id, e),\n                children: \"\\uD83D\\uDC41\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), showViewerPopup && viewers[showViewerPopup] && /*#__PURE__*/_jsxDEV(ViewerPopup, {\n      viewers: viewers[showViewerPopup],\n      onClose: () => setShowViewerPopup(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"QcX0vznkLKCDcGy51SrfzOJNrlY=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Pusher","ViewerPopup","profileImage","eyeIcon","seenIcon","multipleSeenIcon","jsxDEV","_jsxDEV","ChatRoom","currentUser","selectedRoom","onLogout","_s","message","setMessage","messages","setMessages","unseenMessageIds","setUnseenMessageIds","viewers","setViewers","showViewerPopup","setShowViewerPopup","chatAreaRef","scrollToUnseenMessage","unseenMessages","length","firstUnseenMessageId","id","unseenMessageElement","document","getElementById","scrollIntoView","behavior","block","fetchMessages","response","get","data","unseenResponse","map","msg","post","headers","forEach","viewersResponse","prevViewers","error","console","markMessageAsSeen","messageId","pusher","cluster","channel","subscribe","bind","newMessage","prevMessages","unsubscribe","handleLogout","put","isActive","sendMessage","e","preventDefault","trim","user","username","avatar","room","label","savedMessage","toggleViewerPopup","event","rect","target","getBoundingClientRect","position","top","bottom","window","scrollY","left","scrollX","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_viewers$msg$id","src","alt","Date","createdAt","toLocaleTimeString","onSubmit","type","value","onChange","placeholder","onClose","_c","$RefreshReg$"],"sources":["D:/sic/sic_front/src/component/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport './chatroom.css';\r\nimport './ViewerPopup.css'; // Import the CSS for the viewer popup\r\nimport ViewerPopup from './popup'; // Import the viewer popup component\r\n\r\n\r\nimport profileImage from './profile.png';\r\nimport eyeIcon from './view.png'; // Add a suitable eye icon image for unseen messages\r\nimport seenIcon from './double-check.png'; // Add a suitable seen icon image for seen messages\r\nimport multipleSeenIcon from './check.png'; // Add a suitable icon for multiple viewers\r\n\r\nconst ChatRoom = ({ currentUser, selectedRoom, onLogout }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [unseenMessageIds, setUnseenMessageIds] = useState([]);\r\n    const [viewers, setViewers] = useState({}); // Store viewers for each message\r\n    const [showViewerPopup, setShowViewerPopup] = useState(null); // State to manage visible viewer list\r\n    const chatAreaRef = useRef(null);\r\n\r\n    const scrollToUnseenMessage = (unseenMessages) => {\r\n        if (unseenMessages.length > 0) {\r\n            const firstUnseenMessageId = unseenMessages[0].id;\r\n            const unseenMessageElement = document.getElementById(`message-${firstUnseenMessageId}`);\r\n            if (unseenMessageElement) {\r\n                unseenMessageElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}`);\r\n            setMessages(response.data);\r\n\r\n            const unseenResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/unseenMessages`);\r\n            const unseenMessages = unseenResponse.data;\r\n\r\n            if (unseenMessages.length > 0) {\r\n                setUnseenMessageIds(unseenMessages.map(msg => msg.id));\r\n                await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, unseenMessages.map(msg => msg.id), { headers: { 'Content-Type': 'application/json' } });\r\n                scrollToUnseenMessage(unseenMessages);\r\n            }\r\n\r\n            // Fetch viewers for each message\r\n            response.data.forEach(async (msg) => {\r\n                const viewersResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${msg.id}/viewers`);\r\n                setViewers(prevViewers => ({\r\n                    ...prevViewers,\r\n                    [msg.id]: viewersResponse.data\r\n                }));\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n        }\r\n    };\r\n\r\n    const markMessageAsSeen = async (messageId) => {\r\n        try {\r\n            await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, [messageId], { headers: { 'Content-Type': 'application/json' } });\r\n        } catch (error) {\r\n            console.error('Error marking message as seen:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedRoom?.id) {\r\n            fetchMessages();\r\n\r\n            const pusher = new Pusher('26b8c5180fb34a80d337', { cluster: 'eu' });\r\n            const channel = pusher.subscribe(`room-${selectedRoom.id}`);\r\n            channel.bind('new-message', (newMessage) => {\r\n                setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n                markMessageAsSeen(newMessage.id);\r\n            });\r\n\r\n            return () => {\r\n                pusher.unsubscribe(`room-${selectedRoom.id}`);\r\n            };\r\n        }\r\n    }, [selectedRoom?.id]);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`, { isActive: false });\r\n            onLogout();\r\n        } catch (error) {\r\n            console.error('Error updating join status:', error);\r\n        }\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (message.trim()) {\r\n            try {\r\n                const newMessage = {\r\n                    message: message,\r\n                    user: { id: currentUser.id, username: currentUser.username, avatar: currentUser.avatar }, // Include avatar\r\n                    room: { id: selectedRoom.id, label: selectedRoom.label }\r\n                };\r\n                const response = await axios.post('http://localhost:8080/message', newMessage);\r\n                const savedMessage = response.data;\r\n                setMessage('');\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleViewerPopup = (messageId, event) => {\r\n        const rect = event.target.getBoundingClientRect(); // Get position of the clicked icon\r\n        const position = {\r\n            top: rect.bottom + window.scrollY, // Bottom of the icon\r\n            left: rect.left + window.scrollX,  // Left of the icon\r\n        };\r\n\r\n        if (showViewerPopup?.id === messageId) {\r\n            setShowViewerPopup(null); // Hide viewer list\r\n        } else {\r\n            setShowViewerPopup({ id: messageId, position }); // Show viewer list with position\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatroom-container\">\r\n            <nav className=\"navbar\">\r\n                <span className=\"navbar-user\">Logged in as: {currentUser.username}</span>\r\n                <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n\r\n            <div className=\"chat-area\" ref={chatAreaRef}>\r\n                <h3>Chatting in: {selectedRoom.label}</h3>\r\n                <div className=\"message-list\">\r\n                    {messages.map((msg) => (\r\n                        <div\r\n                            key={msg.id}\r\n                            id={`message-${msg.id}`}\r\n                            className={`message ${msg.user.id === currentUser.id ? 'sent' : 'received'}`}>\r\n                            <img src={profileImage} alt=\"Avatar\" className=\"avatar\" />\r\n                            <div className=\"message-content\">\r\n                                <strong>{msg.user ? msg.user.username : 'Unknown User'}:</strong> {msg.message || ''}\r\n                                <span className=\"message-time\">{new Date(msg.createdAt).toLocaleTimeString()}</span>\r\n                                {viewers[msg.id]?.length > 0 && ( // Display seen icon if there are viewers\r\n                                    <span className=\"seen-icon\" onClick={(e) => toggleViewerPopup(msg.id, e)}>👁️</span>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <form onSubmit={sendMessage} className=\"message-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"message-input\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                </form>\r\n            </div>\r\n\r\n            {/* Display the viewer popup if it is open */}\r\n            {showViewerPopup && viewers[showViewerPopup] && (\r\n                <ViewerPopup\r\n                    viewers={viewers[showViewerPopup]}\r\n                    onClose={() => setShowViewerPopup(null)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAO,gBAAgB;AACvB,OAAO,mBAAmB,CAAC,CAAC;AAC5B,OAAOC,WAAW,MAAM,SAAS,CAAC,CAAC;;AAGnC,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,OAAO,MAAM,YAAY,CAAC,CAAC;AAClC,OAAOC,QAAQ,MAAM,oBAAoB,CAAC,CAAC;AAC3C,OAAOC,gBAAgB,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM2B,WAAW,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAM0B,qBAAqB,GAAIC,cAAc,IAAK;IAC9C,IAAIA,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,oBAAoB,GAAGF,cAAc,CAAC,CAAC,CAAC,CAACG,EAAE;MACjD,MAAMC,oBAAoB,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAWJ,oBAAoB,EAAE,CAAC;MACvF,IAAIE,oBAAoB,EAAE;QACtBA,oBAAoB,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAS,CAAC,CAAC;MAChF;IACJ;EACJ,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMrC,KAAK,CAACsC,GAAG,CAAC,iCAAiC3B,YAAY,CAACkB,EAAE,EAAE,CAAC;MACpFZ,WAAW,CAACoB,QAAQ,CAACE,IAAI,CAAC;MAE1B,MAAMC,cAAc,GAAG,MAAMxC,KAAK,CAACsC,GAAG,CAAC,iCAAiC3B,YAAY,CAACkB,EAAE,IAAInB,WAAW,CAACmB,EAAE,iBAAiB,CAAC;MAC3H,MAAMH,cAAc,GAAGc,cAAc,CAACD,IAAI;MAE1C,IAAIb,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3BR,mBAAmB,CAACO,cAAc,CAACe,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACb,EAAE,CAAC,CAAC;QACtD,MAAM7B,KAAK,CAAC2C,IAAI,CAAC,iCAAiChC,YAAY,CAACkB,EAAE,IAAInB,WAAW,CAACmB,EAAE,WAAW,EAAEH,cAAc,CAACe,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACb,EAAE,CAAC,EAAE;UAAEe,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAAE,CAAC,CAAC;QACvLnB,qBAAqB,CAACC,cAAc,CAAC;MACzC;;MAEA;MACAW,QAAQ,CAACE,IAAI,CAACM,OAAO,CAAC,MAAOH,GAAG,IAAK;QACjC,MAAMI,eAAe,GAAG,MAAM9C,KAAK,CAACsC,GAAG,CAAC,iCAAiC3B,YAAY,CAACkB,EAAE,IAAIa,GAAG,CAACb,EAAE,UAAU,CAAC;QAC7GR,UAAU,CAAC0B,WAAW,KAAK;UACvB,GAAGA,WAAW;UACd,CAACL,GAAG,CAACb,EAAE,GAAGiB,eAAe,CAACP;QAC9B,CAAC,CAAC,CAAC;MACP,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,SAAS,IAAK;IAC3C,IAAI;MACA,MAAMnD,KAAK,CAAC2C,IAAI,CAAC,iCAAiChC,YAAY,CAACkB,EAAE,IAAInB,WAAW,CAACmB,EAAE,WAAW,EAAE,CAACsB,SAAS,CAAC,EAAE;QAAEP,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAAE,CAAC,CAAC;IACrK,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;EAEDlD,SAAS,CAAC,MAAM;IACZ,IAAIa,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEkB,EAAE,EAAE;MAClBO,aAAa,CAAC,CAAC;MAEf,MAAMgB,MAAM,GAAG,IAAInD,MAAM,CAAC,sBAAsB,EAAE;QAAEoD,OAAO,EAAE;MAAK,CAAC,CAAC;MACpE,MAAMC,OAAO,GAAGF,MAAM,CAACG,SAAS,CAAC,QAAQ5C,YAAY,CAACkB,EAAE,EAAE,CAAC;MAC3DyB,OAAO,CAACE,IAAI,CAAC,aAAa,EAAGC,UAAU,IAAK;QACxCxC,WAAW,CAAEyC,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;QAC5DP,iBAAiB,CAACO,UAAU,CAAC5B,EAAE,CAAC;MACpC,CAAC,CAAC;MAEF,OAAO,MAAM;QACTuB,MAAM,CAACO,WAAW,CAAC,QAAQhD,YAAY,CAACkB,EAAE,EAAE,CAAC;MACjD,CAAC;IACL;EACJ,CAAC,EAAE,CAAClB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkB,EAAE,CAAC,CAAC;EAEtB,MAAM+B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAM5D,KAAK,CAAC6D,GAAG,CAAC,8BAA8BnD,WAAW,CAACmB,EAAE,IAAIlB,YAAY,CAACkB,EAAE,EAAE,EAAE;QAAEiC,QAAQ,EAAE;MAAM,CAAC,CAAC;MACvGlD,QAAQ,CAAC,CAAC;IACd,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAInD,OAAO,CAACoD,IAAI,CAAC,CAAC,EAAE;MAChB,IAAI;QACA,MAAMT,UAAU,GAAG;UACf3C,OAAO,EAAEA,OAAO;UAChBqD,IAAI,EAAE;YAAEtC,EAAE,EAAEnB,WAAW,CAACmB,EAAE;YAAEuC,QAAQ,EAAE1D,WAAW,CAAC0D,QAAQ;YAAEC,MAAM,EAAE3D,WAAW,CAAC2D;UAAO,CAAC;UAAE;UAC1FC,IAAI,EAAE;YAAEzC,EAAE,EAAElB,YAAY,CAACkB,EAAE;YAAE0C,KAAK,EAAE5D,YAAY,CAAC4D;UAAM;QAC3D,CAAC;QACD,MAAMlC,QAAQ,GAAG,MAAMrC,KAAK,CAAC2C,IAAI,CAAC,+BAA+B,EAAEc,UAAU,CAAC;QAC9E,MAAMe,YAAY,GAAGnC,QAAQ,CAACE,IAAI;QAClCxB,UAAU,CAAC,EAAE,CAAC;MAClB,CAAC,CAAC,OAAOiC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ;EACJ,CAAC;EAED,MAAMyB,iBAAiB,GAAGA,CAACtB,SAAS,EAAEuB,KAAK,KAAK;IAC5C,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IACnD,MAAMC,QAAQ,GAAG;MACbC,GAAG,EAAEJ,IAAI,CAACK,MAAM,GAAGC,MAAM,CAACC,OAAO;MAAE;MACnCC,IAAI,EAAER,IAAI,CAACQ,IAAI,GAAGF,MAAM,CAACG,OAAO,CAAG;IACvC,CAAC;IAED,IAAI,CAAA9D,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEO,EAAE,MAAKsB,SAAS,EAAE;MACnC5B,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACHA,kBAAkB,CAAC;QAAEM,EAAE,EAAEsB,SAAS;QAAE2B;MAAS,CAAC,CAAC,CAAC,CAAC;IACrD;EACJ,CAAC;EAED,oBACItE,OAAA;IAAK6E,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/B9E,OAAA;MAAK6E,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnB9E,OAAA;QAAM6E,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,gBAAc,EAAC5E,WAAW,CAAC0D,QAAQ;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzElF,OAAA;QAAQ6E,SAAS,EAAC,YAAY;QAACM,OAAO,EAAE/B,YAAa;QAAA0B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eAENlF,OAAA;MAAK6E,SAAS,EAAC,WAAW;MAACO,GAAG,EAAEpE,WAAY;MAAA8D,QAAA,gBACxC9E,OAAA;QAAA8E,QAAA,GAAI,eAAa,EAAC3E,YAAY,CAAC4D,KAAK;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1ClF,OAAA;QAAK6E,SAAS,EAAC,cAAc;QAAAC,QAAA,EACxBtE,QAAQ,CAACyB,GAAG,CAAEC,GAAG;UAAA,IAAAmD,eAAA;UAAA,oBACdrF,OAAA;YAEIqB,EAAE,EAAE,WAAWa,GAAG,CAACb,EAAE,EAAG;YACxBwD,SAAS,EAAE,WAAW3C,GAAG,CAACyB,IAAI,CAACtC,EAAE,KAAKnB,WAAW,CAACmB,EAAE,GAAG,MAAM,GAAG,UAAU,EAAG;YAAAyD,QAAA,gBAC7E9E,OAAA;cAAKsF,GAAG,EAAE3F,YAAa;cAAC4F,GAAG,EAAC,QAAQ;cAACV,SAAS,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC1DlF,OAAA;cAAK6E,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC5B9E,OAAA;gBAAA8E,QAAA,GAAS5C,GAAG,CAACyB,IAAI,GAAGzB,GAAG,CAACyB,IAAI,CAACC,QAAQ,GAAG,cAAc,EAAC,GAAC;cAAA;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAChD,GAAG,CAAC5B,OAAO,IAAI,EAAE,eACpFN,OAAA;gBAAM6E,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAE,IAAIU,IAAI,CAACtD,GAAG,CAACuD,SAAS,CAAC,CAACC,kBAAkB,CAAC;cAAC;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EACnF,EAAAG,eAAA,GAAAzE,OAAO,CAACsB,GAAG,CAACb,EAAE,CAAC,cAAAgE,eAAA,uBAAfA,eAAA,CAAiBlE,MAAM,IAAG,CAAC;cAAA;cAAM;cAC9BnB,OAAA;gBAAM6E,SAAS,EAAC,WAAW;gBAACM,OAAO,EAAG3B,CAAC,IAAKS,iBAAiB,CAAC/B,GAAG,CAACb,EAAE,EAAEmC,CAAC,CAAE;gBAAAsB,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACtF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA,GAVDhD,GAAG,CAACb,EAAE;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWV,CAAC;QAAA,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENlF,OAAA;QAAM2F,QAAQ,EAAEpC,WAAY;QAACsB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACjD9E,OAAA;UACI4F,IAAI,EAAC,MAAM;UACXf,SAAS,EAAC,eAAe;UACzBgB,KAAK,EAAEvF,OAAQ;UACfwF,QAAQ,EAAGtC,CAAC,IAAKjD,UAAU,CAACiD,CAAC,CAACY,MAAM,CAACyB,KAAK,CAAE;UAC5CE,WAAW,EAAC;QAAmB;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACFlF,OAAA;UAAQ4F,IAAI,EAAC,QAAQ;UAACf,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLpE,eAAe,IAAIF,OAAO,CAACE,eAAe,CAAC,iBACxCd,OAAA,CAACN,WAAW;MACRkB,OAAO,EAAEA,OAAO,CAACE,eAAe,CAAE;MAClCkF,OAAO,EAAEA,CAAA,KAAMjF,kBAAkB,CAAC,IAAI;IAAE;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7E,EAAA,CAhKIJ,QAAQ;AAAAgG,EAAA,GAARhG,QAAQ;AAkKd,eAAeA,QAAQ;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}