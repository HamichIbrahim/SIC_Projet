{"ast":null,"code":"var _jsxFileName = \"D:\\\\sic\\\\sic_front\\\\src\\\\component\\\\Room.js\",\n  _s = $RefreshSig$();\n// ChatRoomSelector.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './room.css'; // Import the CSS file\nimport ChatRoom from './ChatRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoomSelector = ({\n  currentUser\n}) => {\n  _s();\n  const [chatRooms, setChatRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n\n  // Fetch chat rooms from the API\n  useEffect(() => {\n    const fetchChatRooms = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/v1/rooms'); // Adjust API endpoint\n        setChatRooms(response.data);\n      } catch (error) {\n        console.error('Error fetching chat rooms:', error);\n      }\n    };\n    fetchChatRooms();\n  }, []);\n  const handleJoinRoom = async room => {\n    try {\n      // Create a new Join row in the database\n      const joinResponse = await axios.post('http://localhost:8080/join', {\n        userId: currentUser.id,\n        // Send userId from the currentUser object\n        roomId: room.id // Send roomId from the selected room\n      });\n      if (joinResponse.status === 201) {\n        // Successfully joined the room\n        console.log(`Successfully joined room: ${room.label}`);\n        setSelectedRoom(room); // Set the selected room after successful join\n      } else {\n        console.error('Failed to join the room');\n      }\n    } catch (error) {\n      console.error('Error joining room:', error);\n    }\n  };\n  if (selectedRoom) {\n    return /*#__PURE__*/_jsxDEV(ChatRoom, {\n      currentUser: currentUser,\n      selectedRoom: selectedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-room-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome, \", currentUser.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Chat Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-room-list\",\n          children: chatRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-room\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: room.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleJoinRoom(room),\n              children: \"Join\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, room.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: selectedRoom ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Joined Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a room to start chatting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(ChatRoomSelector, \"kdpFLCtErSTo6jUXfTi/Opsh2pY=\");\n_c = ChatRoomSelector;\nexport default ChatRoomSelector;\nvar _c;\n$RefreshReg$(_c, \"ChatRoomSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","ChatRoom","jsxDEV","_jsxDEV","ChatRoomSelector","currentUser","_s","chatRooms","setChatRooms","selectedRoom","setSelectedRoom","fetchChatRooms","response","get","data","error","console","handleJoinRoom","room","joinResponse","post","userId","id","roomId","status","log","label","fileName","_jsxFileName","lineNumber","columnNumber","className","children","username","map","onClick","_c","$RefreshReg$"],"sources":["D:/sic/sic_front/src/component/Room.js"],"sourcesContent":["// ChatRoomSelector.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './room.css'; // Import the CSS file\r\nimport ChatRoom from './ChatRoom';\r\n\r\nconst ChatRoomSelector = ({ currentUser }) => {\r\n    const [chatRooms, setChatRooms] = useState([]);\r\n    const [selectedRoom, setSelectedRoom] = useState(null);\r\n\r\n    // Fetch chat rooms from the API\r\n    useEffect(() => {\r\n        const fetchChatRooms = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/v1/rooms'); // Adjust API endpoint\r\n                setChatRooms(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching chat rooms:', error);\r\n            }\r\n        };\r\n        fetchChatRooms();\r\n    }, []);\r\n\r\n    const handleJoinRoom = async (room) => {\r\n        try {\r\n            // Create a new Join row in the database\r\n            const joinResponse = await axios.post('http://localhost:8080/join', {\r\n                userId: currentUser.id,   // Send userId from the currentUser object\r\n                roomId: room.id           // Send roomId from the selected room\r\n            });\r\n\r\n            if (joinResponse.status === 201) {\r\n                // Successfully joined the room\r\n                console.log(`Successfully joined room: ${room.label}`);\r\n                setSelectedRoom(room); // Set the selected room after successful join\r\n            } else {\r\n                console.error('Failed to join the room');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error joining room:', error);\r\n        }\r\n    };\r\n    if (selectedRoom) {\r\n        return <ChatRoom currentUser={currentUser} selectedRoom={selectedRoom} />;\r\n    }else{\r\n        return (\r\n            <div className=\"chat-container\">\r\n                <div className=\"chat-room-selector\">\r\n                <h2>Welcome, {currentUser.username}</h2>\r\n                    <h2>Select a Chat Room</h2>\r\n                    <div className=\"chat-room-list\">\r\n                        {chatRooms.map((room) => (\r\n                            <div key={room.id} className=\"chat-room\">\r\n                                <span>{room.label}</span>\r\n                                <button onClick={() => handleJoinRoom(room)}>Join</button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-area\">\r\n                    {selectedRoom ? (\r\n                        <h3>Joined Room</h3>\r\n                    ) : (\r\n                        <p>Select a room to start chatting.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n};\r\n\r\nexport default ChatRoomSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}