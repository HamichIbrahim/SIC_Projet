{"ast":null,"code":"var _jsxFileName = \"D:\\\\sic\\\\sic_front\\\\src\\\\component\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport './chatroom.css';\nimport './ViewerPopup.css'; // Import the CSS for the viewer popup\nimport ViewerPopup from './popup'; // Import the viewer popup component\n\nimport profileImage from './profile.png';\nimport seenIcon from './double-check.png'; // Add a suitable seen icon image for seen messages\nimport multipleSeenIcon from './icons8-select-24.png'; // Add a suitable icon for multiple viewers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  currentUser,\n  selectedRoom,\n  onLogout,\n  onleave\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [unseenMessageIds, setUnseenMessageIds] = useState([]);\n  const [viewers, setViewers] = useState({}); // Store viewers for each message\n  const [showViewerPopup, setShowViewerPopup] = useState(null); // State to manage visible viewer list\n  const chatAreaRef = useRef(null);\n  const endOfMessagesRef = useRef(null); // A ref to track the bottom of the messages\n\n  const scrollToBottom = () => {\n    if (endOfMessagesRef.current) {\n      endOfMessagesRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  const scrollToUnseenMessage = unseenMessages => {\n    if (unseenMessages.length > 0) {\n      const firstUnseenMessageId = unseenMessages[0].id;\n      const unseenMessageElement = document.getElementById(`message-${firstUnseenMessageId}`);\n      if (unseenMessageElement) {\n        unseenMessageElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        });\n      }\n    }\n  };\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}`);\n      setMessages(response.data);\n      const unseenResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/unseenMessages`);\n      const unseenMessages = unseenResponse.data;\n      if (unseenMessages.length > 0) {\n        setUnseenMessageIds(unseenMessages.map(msg => msg.id));\n        await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, unseenMessages.map(msg => msg.id), {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        scrollToUnseenMessage(unseenMessages);\n      }\n\n      // Fetch viewers for each message\n      response.data.forEach(async msg => {\n        const viewersResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${msg.id}/${currentUser.id}/viewers`);\n        setViewers(prevViewers => ({\n          ...prevViewers,\n          [msg.id]: viewersResponse.data\n        }));\n      });\n\n      // Scroll to bottom after initial fetch\n      scrollToBottom();\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const markMessageAsSeen = async messageId => {\n    try {\n      await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, [messageId], {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Error marking message as seen:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedRoom !== null && selectedRoom !== void 0 && selectedRoom.id) {\n      fetchMessages();\n      const pusher = new Pusher('26b8c5180fb34a80d337', {\n        cluster: 'eu'\n      });\n      const channel = pusher.subscribe(`room-${selectedRoom.id}`);\n      channel.bind('new-message', async newMessage => {\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n        markMessageAsSeen(newMessage.id);\n        try {\n          const viewersResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${newMessage.id}/${currentUser.id}/viewers`);\n          setViewers(prevViewers => ({\n            ...prevViewers,\n            [newMessage.id]: viewersResponse.data // Update viewers for this new message\n          }));\n        } catch (error) {\n          console.error('Error fetching viewers for new message:', error);\n        }\n        scrollToBottom(); // Scroll to bottom when a new message is received\n      });\n      channel.bind('message-seen', seenData => {\n        const {\n          messageId,\n          viewers\n        } = seenData;\n        setViewers(prevViewers => ({\n          ...prevViewers,\n          [messageId]: viewers // Update the viewers list for the message that was seen\n        }));\n      });\n      return () => {\n        pusher.unsubscribe(`room-${selectedRoom.id}`);\n      };\n    }\n  }, [selectedRoom === null || selectedRoom === void 0 ? void 0 : selectedRoom.id]);\n  const handleLeaveRoom = async () => {\n    try {\n      // Update user's active status to leave the room\n      await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`, {\n        isActive: false\n      });\n      onleave(); // Invoke the onLogout function to return to room selector\n    } catch (error) {\n      console.error('Error leaving room:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const newMessage = {\n          message: message,\n          user: {\n            id: currentUser.id,\n            username: currentUser.username,\n            avatar: currentUser.avatar\n          },\n          // Include avatar\n          room: {\n            id: selectedRoom.id,\n            label: selectedRoom.label\n          }\n        };\n        const response = await axios.post('http://localhost:8080/message', newMessage);\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const toggleViewerPopup = messageId => {\n    if (showViewerPopup === messageId) {\n      setShowViewerPopup(null); // Hide viewer list\n    } else {\n      setShowViewerPopup(messageId); // Show viewer list\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profileImage,\n          alt: \"Avatar\",\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-user\",\n        children: [\" \", currentUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"leave-room-btn\",\n        onClick: handleLeaveRoom,\n        children: \"Leave Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      ref: chatAreaRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedRoom.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: [messages.map(msg => {\n          var _viewers$msg$id, _viewers$msg$id2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `message-${msg.id}`,\n            className: `message ${msg.user.id === currentUser.id ? 'sent' : 'received'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: profileImage,\n              alt: \"Avatar\",\n              className: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.user ? msg.user.username : 'Unknown User', \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), msg.message || '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), msg.user.id === currentUser.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-viewers\",\n              onClick: () => toggleViewerPopup(msg.id),\n              children: [((_viewers$msg$id = viewers[msg.id]) === null || _viewers$msg$id === void 0 ? void 0 : _viewers$msg$id.length) === 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: multipleSeenIcon,\n                alt: \"Not viewed\",\n                className: \"viewer-icon\",\n                title: \"Not viewed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this), ((_viewers$msg$id2 = viewers[msg.id]) === null || _viewers$msg$id2 === void 0 ? void 0 : _viewers$msg$id2.length) >= 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: seenIcon,\n                alt: \"Seen by one\",\n                className: \"viewer-icon\",\n                title: \"Seen by at least one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: endOfMessagesRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), showViewerPopup && viewers[showViewerPopup] && /*#__PURE__*/_jsxDEV(ViewerPopup, {\n      viewers: viewers[showViewerPopup],\n      onClose: () => setShowViewerPopup(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"T/jiVps4+PRD7+JP8CEdPgzfK98=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Pusher","ViewerPopup","profileImage","seenIcon","multipleSeenIcon","jsxDEV","_jsxDEV","ChatRoom","currentUser","selectedRoom","onLogout","onleave","_s","message","setMessage","messages","setMessages","unseenMessageIds","setUnseenMessageIds","viewers","setViewers","showViewerPopup","setShowViewerPopup","chatAreaRef","endOfMessagesRef","scrollToBottom","current","scrollIntoView","behavior","scrollToUnseenMessage","unseenMessages","length","firstUnseenMessageId","id","unseenMessageElement","document","getElementById","block","fetchMessages","response","get","data","unseenResponse","map","msg","post","headers","forEach","viewersResponse","prevViewers","error","console","markMessageAsSeen","messageId","pusher","cluster","channel","subscribe","bind","newMessage","prevMessages","seenData","unsubscribe","handleLeaveRoom","put","isActive","sendMessage","e","preventDefault","trim","user","username","avatar","room","label","toggleViewerPopup","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_viewers$msg$id","_viewers$msg$id2","title","onSubmit","type","value","onChange","target","placeholder","onClose","_c","$RefreshReg$"],"sources":["D:/sic/sic_front/src/component/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport './chatroom.css';\r\nimport './ViewerPopup.css'; // Import the CSS for the viewer popup\r\nimport ViewerPopup from './popup'; // Import the viewer popup component\r\n\r\nimport profileImage from './profile.png';\r\nimport seenIcon from './double-check.png'; // Add a suitable seen icon image for seen messages\r\nimport multipleSeenIcon from './icons8-select-24.png'; // Add a suitable icon for multiple viewers\r\n\r\nconst ChatRoom = ({ currentUser, selectedRoom, onLogout, onleave }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [unseenMessageIds, setUnseenMessageIds] = useState([]);\r\n    const [viewers, setViewers] = useState({}); // Store viewers for each message\r\n    const [showViewerPopup, setShowViewerPopup] = useState(null); // State to manage visible viewer list\r\n    const chatAreaRef = useRef(null);\r\n    const endOfMessagesRef = useRef(null); // A ref to track the bottom of the messages\r\n\r\n    const scrollToBottom = () => {\r\n        if (endOfMessagesRef.current) {\r\n            endOfMessagesRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const scrollToUnseenMessage = (unseenMessages) => {\r\n        if (unseenMessages.length > 0) {\r\n            const firstUnseenMessageId = unseenMessages[0].id;\r\n            const unseenMessageElement = document.getElementById(`message-${firstUnseenMessageId}`);\r\n            if (unseenMessageElement) {\r\n                unseenMessageElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}`);\r\n            setMessages(response.data);\r\n\r\n            const unseenResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/unseenMessages`);\r\n            const unseenMessages = unseenResponse.data;\r\n\r\n            if (unseenMessages.length > 0) {\r\n                setUnseenMessageIds(unseenMessages.map(msg => msg.id));\r\n                await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, unseenMessages.map(msg => msg.id), { headers: { 'Content-Type': 'application/json' } });\r\n                scrollToUnseenMessage(unseenMessages);\r\n            }\r\n\r\n            // Fetch viewers for each message\r\n            response.data.forEach(async (msg) => {\r\n                const viewersResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${msg.id}/${currentUser.id}/viewers`);\r\n                setViewers(prevViewers => ({\r\n                    ...prevViewers,\r\n                    [msg.id]: viewersResponse.data\r\n                }));\r\n            });\r\n\r\n            // Scroll to bottom after initial fetch\r\n            scrollToBottom();\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n        }\r\n    };\r\n\r\n    const markMessageAsSeen = async (messageId) => {\r\n        try {\r\n            await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/markseen`, [messageId], { headers: { 'Content-Type': 'application/json' } });\r\n        } catch (error) {\r\n            console.error('Error marking message as seen:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedRoom?.id) {\r\n            fetchMessages();\r\n\r\n            const pusher = new Pusher('26b8c5180fb34a80d337', { cluster: 'eu' });\r\n            const channel = pusher.subscribe(`room-${selectedRoom.id}`);\r\n\r\n            channel.bind('new-message', async (newMessage) => {\r\n                setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n                markMessageAsSeen(newMessage.id);\r\n                try {\r\n                    const viewersResponse = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${newMessage.id}/${currentUser.id}/viewers`);\r\n                    setViewers(prevViewers => ({\r\n                        ...prevViewers,\r\n                        [newMessage.id]: viewersResponse.data // Update viewers for this new message\r\n                    }));\r\n                } catch (error) {\r\n                    console.error('Error fetching viewers for new message:', error);\r\n                }\r\n                scrollToBottom(); // Scroll to bottom when a new message is received\r\n            });\r\n\r\n            channel.bind('message-seen', (seenData) => {\r\n                const { messageId, viewers } = seenData;\r\n                setViewers(prevViewers => ({\r\n                    ...prevViewers,\r\n                    [messageId]: viewers // Update the viewers list for the message that was seen\r\n                }));\r\n            });\r\n\r\n            return () => {\r\n                pusher.unsubscribe(`room-${selectedRoom.id}`);\r\n            };\r\n        }\r\n    }, [selectedRoom?.id]);\r\n\r\n    const handleLeaveRoom = async () => {\r\n        try {\r\n            // Update user's active status to leave the room\r\n            await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`, { isActive: false });\r\n            onleave(); // Invoke the onLogout function to return to room selector\r\n        } catch (error) {\r\n            console.error('Error leaving room:', error);\r\n        }\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (message.trim()) {\r\n            try {\r\n                const newMessage = {\r\n                    message: message,\r\n                    user: { id: currentUser.id, username: currentUser.username, avatar: currentUser.avatar }, // Include avatar\r\n                    room: { id: selectedRoom.id, label: selectedRoom.label }\r\n                };\r\n                const response = await axios.post('http://localhost:8080/message', newMessage);\r\n                setMessage('');\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleViewerPopup = (messageId) => {\r\n        if (showViewerPopup === messageId) {\r\n            setShowViewerPopup(null); // Hide viewer list\r\n        } else {\r\n            setShowViewerPopup(messageId); // Show viewer list\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatroom-container\">\r\n            <nav className=\"navbar\">\r\n                <span>\r\n                    <img src={profileImage} alt=\"Avatar\" className=\"avatar\" />\r\n                </span>\r\n                <span className=\"navbar-user\"> {currentUser.username}</span>\r\n                <button className=\"leave-room-btn\" onClick={handleLeaveRoom}>Leave Room</button>\r\n            </nav>\r\n\r\n            <div className=\"chat-area\" ref={chatAreaRef}>\r\n                <h3>{selectedRoom.label}</h3>\r\n                <div className=\"message-list\">\r\n                    {messages.map((msg) => (\r\n                        <div\r\n                            key={msg.id}\r\n                            id={`message-${msg.id}`}\r\n                            className={`message ${msg.user.id === currentUser.id ? 'sent' : 'received'}`}>\r\n                            <img src={profileImage} alt=\"Avatar\" className=\"avatar\" />\r\n                            <div className=\"message-content\">\r\n                                <strong>{msg.user ? msg.user.username : 'Unknown User'}:</strong>\r\n                                <br></br>\r\n                                {msg.message || ''}\r\n                            </div>\r\n\r\n                            {msg.user.id === currentUser.id && (\r\n                                <div className=\"message-viewers\" onClick={() => toggleViewerPopup(msg.id)}>\r\n                                    {viewers[msg.id]?.length === 0 && (\r\n                                        <img src={multipleSeenIcon} alt=\"Not viewed\" className=\"viewer-icon\" title=\"Not viewed\" />\r\n                                    )}\r\n                                    {viewers[msg.id]?.length >= 1 && (\r\n                                        <img src={seenIcon} alt=\"Seen by one\" className=\"viewer-icon\" title=\"Seen by at least one\" />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                    <div ref={endOfMessagesRef}></div> {/* Marker for the end of messages */}\r\n                </div>\r\n\r\n                <form onSubmit={sendMessage} className=\"message-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"message-input\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                </form>\r\n            </div>\r\n\r\n            {showViewerPopup && viewers[showViewerPopup] && (\r\n                <ViewerPopup\r\n                    viewers={viewers[showViewerPopup]}\r\n                    onClose={() => setShowViewerPopup(null)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}