{"ast":null,"code":"var _jsxFileName = \"D:\\\\sic\\\\sic_front\\\\src\\\\component\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './chatroom.css'; // You can style the component as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  currentUser,\n  selectedRoom,\n  onLogout\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]); // Stores sent messages\n\n  // Fetch all messages of the current room when the component loads\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}`);\n        setMessages(response.data); // Set fetched messages to state\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [selectedRoom.id]);\n  const handleLogout = async () => {\n    try {\n      // Call the API to update isActive to false\n      await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`, {\n        isActive: false\n      });\n\n      // Call the onLogout function to handle logout logic in the parent component\n      onLogout();\n    } catch (error) {\n      console.error('Error updating join status:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const newMessage = {\n          message: message,\n          // Ensure this matches your backend's field name (message or content)\n          user: {\n            id: currentUser.id\n          },\n          room: {\n            id: selectedRoom.id\n          }\n        };\n\n        // Save the message in the database and get the saved message from the response\n        const response = await axios.post('http://localhost:8080/message', newMessage);\n        const savedMessage = response.data;\n\n        // Update the local messages list for immediate display using the exact structure from the backend\n        setMessages([...messages, savedMessage]);\n\n        // Clear input after sending\n        setMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-user\",\n        children: [\"Logged in as: \", currentUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chatting in: \", selectedRoom.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.user.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatRoom","currentUser","selectedRoom","onLogout","_s","message","setMessage","messages","setMessages","fetchMessages","response","get","id","data","console","log","error","handleLogout","put","isActive","sendMessage","e","preventDefault","trim","newMessage","user","room","post","savedMessage","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","label","map","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/sic/sic_front/src/component/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './chatroom.css'; // You can style the component as needed\r\n\r\nconst ChatRoom = ({ currentUser, selectedRoom, onLogout }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]); // Stores sent messages\r\n\r\n    // Fetch all messages of the current room when the component loads\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}`);\r\n                setMessages(response.data); // Set fetched messages to state\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, [selectedRoom.id]);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            // Call the API to update isActive to false\r\n            await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`, { isActive: false });\r\n\r\n            // Call the onLogout function to handle logout logic in the parent component\r\n            onLogout();\r\n        } catch (error) {\r\n            console.error('Error updating join status:', error);\r\n        }\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (message.trim()) {\r\n            try {\r\n                const newMessage = {\r\n                    message: message,  // Ensure this matches your backend's field name (message or content)\r\n                    user: { id: currentUser.id },\r\n                    room: { id: selectedRoom.id }\r\n                };\r\n    \r\n                // Save the message in the database and get the saved message from the response\r\n                const response = await axios.post('http://localhost:8080/message', newMessage);\r\n                const savedMessage = response.data;\r\n    \r\n                // Update the local messages list for immediate display using the exact structure from the backend\r\n                setMessages([...messages, savedMessage]);\r\n    \r\n                // Clear input after sending\r\n                setMessage('');\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n            }\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"chatroom-container\">\r\n            {/* Navbar */}\r\n            <nav className=\"navbar\">\r\n                <span className=\"navbar-user\">Logged in as: {currentUser.username}</span>\r\n                <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n\r\n            {/* Chat Area */}\r\n            <div className=\"chat-area\">\r\n                <h3>Chatting in: {selectedRoom.label}</h3>\r\n                <div className=\"message-list\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className=\"message\">\r\n                            <strong>{msg.user.username}:</strong> {msg.message}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Input field for new messages */}\r\n                <form onSubmit={sendMessage} className=\"message-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"message-input\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}