{"ast":null,"code":"var _jsxFileName = \"D:\\\\sic\\\\sic_front\\\\src\\\\component\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './chatroom.css'; // You can style the component as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  currentUser,\n  selectedRoom,\n  onLogout\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]); // Stores sent messages\n\n  // Fetch all messages of the current room when the component loads\n  useEffect(() => {\n    const fetchUnseenMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/unseenMessages`);\n        setMessages(response.data); // Update the messages list with unseen messages\n        console.log(response.data);\n\n        // Optionally mark all unseen messages as seen after fetching\n        if (response.data.length > 0) {\n          const lastMessageId = response.data[response.data.length - 1].id;\n          await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/lastSeenMessage`, lastMessageId);\n        }\n      } catch (error) {\n        console.error('Error fetching unseen messages:', error);\n      }\n    };\n    fetchUnseenMessages();\n  }, [selectedRoom.id]);\n  const handleLogout = async () => {\n    try {\n      await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`);\n      onLogout();\n    } catch (error) {\n      console.error('Error updating join status:', error);\n    }\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim()) {\n      try {\n        const newMessage = {\n          message: message,\n          user: {\n            id: currentUser.id,\n            username: currentUser.username\n          },\n          room: {\n            id: selectedRoom.id,\n            label: selectedRoom.label\n          }\n        };\n        const response = await axios.post('http://localhost:8080/message', newMessage);\n        const savedMessage = response.data;\n        setMessages([...messages, savedMessage]); // Add the new message to the list\n        setMessage('');\n\n        // Update the last seen message for the current user\n        await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/lastSeenMessage`, savedMessage.id);\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-user\",\n        children: [\"Logged in as: \", currentUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chatting in: \", selectedRoom.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.message.user.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), \" \", msg.message.message, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seen-by\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Seen by: \", msg.seenBy.map(user => user.username).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatRoom","currentUser","selectedRoom","onLogout","_s","message","setMessage","messages","setMessages","fetchUnseenMessages","response","get","id","data","console","log","length","lastMessageId","post","error","handleLogout","put","sendMessage","e","preventDefault","trim","newMessage","user","username","room","label","savedMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","seenBy","join","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/sic/sic_front/src/component/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './chatroom.css'; // You can style the component as needed\r\n\r\nconst ChatRoom = ({ currentUser, selectedRoom, onLogout }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]); // Stores sent messages\r\n\r\n    // Fetch all messages of the current room when the component loads\r\n    useEffect(() => {\r\n        const fetchUnseenMessages = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/unseenMessages`);\r\n                setMessages(response.data); // Update the messages list with unseen messages\r\n                console.log(response.data);\r\n    \r\n                // Optionally mark all unseen messages as seen after fetching\r\n                if (response.data.length > 0) {\r\n                    const lastMessageId = response.data[response.data.length - 1].id;\r\n                    await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/lastSeenMessage`, lastMessageId);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching unseen messages:', error);\r\n            }\r\n        };\r\n    \r\n        fetchUnseenMessages();\r\n    }, [selectedRoom.id]);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.put(`http://localhost:8080/join/${currentUser.id}/${selectedRoom.id}`);\r\n            onLogout();\r\n        } catch (error) {\r\n            console.error('Error updating join status:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (message.trim()) {\r\n            try {\r\n                const newMessage = {\r\n                    message: message,\r\n                    user: { id: currentUser.id, username: currentUser.username },\r\n                    room: { id: selectedRoom.id, label: selectedRoom.label }\r\n                };\r\n        \r\n                const response = await axios.post('http://localhost:8080/message', newMessage);\r\n                const savedMessage = response.data;\r\n                setMessages([...messages, savedMessage]); // Add the new message to the list\r\n                setMessage('');\r\n    \r\n                // Update the last seen message for the current user\r\n                await axios.post(`http://localhost:8080/message/${selectedRoom.id}/${currentUser.id}/lastSeenMessage`, savedMessage.id);\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"chatroom-container\">\r\n            <nav className=\"navbar\">\r\n                <span className=\"navbar-user\">Logged in as: {currentUser.username}</span>\r\n                <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n\r\n            <div className=\"chat-area\">\r\n                <h3>Chatting in: {selectedRoom.label}</h3>\r\n                <div className=\"message-list\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className=\"message\">\r\n                            <strong>{msg.message.user.username}:</strong> {msg.message.message}\r\n                            <div className=\"seen-by\">\r\n                                <small>Seen by: {msg.seenBy.map(user => user.username).join(', ')}</small>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <form onSubmit={sendMessage} className=\"message-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"message-input\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}